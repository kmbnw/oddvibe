% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{FindOutlierWeights}
\alias{FindOutlierWeights}
\title{Use boosting to find outliers}
\usage{
FindOutlierWeights(xs, ys, nrounds, seed = 1480561820L)
}
\arguments{
\item{xs}{NumericMatrix of features}

\item{ys}{NumericVector for response variable}

\item{nrounds}{Number of rounds of boosting}

\item{seed}{Random seed to initialize boosting with}
}
\value{
Normalized counts of training instances chosen for all rounds of
boosting.  The largest relative value(s) are the potential outliers.
For example, if the return value is \code{c(0.3, 2.3, 0.5, 6.4)}, then
the last row / instance is the most likely possible outlier, with the
second row being another possible (though less likely) outlier.
}
\description{
Call this repeatedly after removing outliers from the inputs to better find
outliers
}
\examples{
tmp.seed <- 1480561820
set.seed(tmp.seed)
nrows <- 50
nfeatures <- 2
intercept <- 0.75
beta.one <- 2.0
beta.two <- 5.8
xnoise.one <- rnorm(nrows)
xnoise.two <- rnorm(nrows)
threshold <- 0.7 * nrows * nfeatures

# Two features
xs.one <- rnorm(threshold, 5.0, 1.0)
xs.two <- rnorm((nrows * nfeatures) - threshold, 5.0, 1.0)
xs <- c(beta.one * xs.one, beta.two * xs.two)
mat <- matrix(xs, ncol = 2)
ys <- intercept + beta.one * mat[, 1] + beta.two * mat[, 2]

# add noise to avoid a boring perfect fit
mat[, 1] <- mat[, 1] + xnoise.one
mat[, 2] <- mat[, 2] + xnoise.two

outliers <- FindOutlierWeights(mat, ys, 5000, tmp.seed)
}
